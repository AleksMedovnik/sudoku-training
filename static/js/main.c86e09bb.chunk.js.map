{"version":3,"sources":["components/GameOver.jsx","store/reducer.js","components/Main/Main.jsx","components/Main/MainContainer.jsx","components/Menu.jsx","components/Win.jsx","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["GameOver","className","to","SET_VALUE","START_GAME","data","chooseMatrix","Math","floor","random","this","dataMatrix","length","getInitialState","randomData","matrix","start","JSON","parse","stringify","end","values","errors","Main","props","navigate","useNavigate","useEffect","startGame","includes","isWin","window","onpopstate","setValue","e","setValueActionCreator","target","dataset","value","indexArr","useState","newIndexArr","tbody","map","tr","trIndex","td","index","onClick","valuesData","i","data-value","connect","state","main","dispatch","action","type","Menu","Win","App","exact","path","element","MainContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","newState","store","createStore","ReactDOM","render","basename","process","document","getElementById"],"mappings":"0OAUeA,EARE,WACb,OACI,sBAAKC,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,uBACA,cAAC,IAAD,CAASC,GAAG,QAAQD,UAAU,aAA9B,4B,uBCNNE,EAAY,YACZC,EAAa,aAKbC,EAAO,CACTC,aADS,WAEL,OAAOC,KAAKC,MAAMD,KAAKE,SAAWC,KAAKC,WAAWC,SAEtDD,WAAY,CACR,CACI,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAEpB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAGxB,CACI,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAEpB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAGxB,CACI,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAEpB,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,OAM1BE,EAAkB,SAACR,GACrB,IAAMS,EAAaT,EAAKC,eACxB,MAAO,CACHS,OAAQ,CACJC,MAAOC,KAAKC,MAAMD,KAAKE,UAAUd,EAAKM,WAAWG,GAAY,KAC7DM,IAAKH,KAAKC,MAAMD,KAAKE,UAAUd,EAAKM,WAAWG,GAAY,MAE/DO,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACxBC,OAAQ,I,eCXDC,EA9DF,SAACC,GACV,IAAIC,EAAWC,cAcfC,qBAAU,WALFH,EAAMF,QAAU,IAChBE,EAAMI,YACNH,EAAS,cAVH,WAAO,IAAD,gBACAD,EAAMT,QADN,IAChB,2BACI,GAD0B,QAClBc,SAAS,GAAI,OAFT,8BAIhBL,EAAMI,YACNH,EAAS,QAUTK,GACAC,OAAOC,WAAa,kBAAMR,EAAMI,eACjC,CAACJ,EAAMT,OAAQS,EAAMF,SAExB,IAAMW,EAAW,SAACC,GACdV,EAAMW,sBAAsBD,EAAEE,OAAOC,QAAQC,MAAOC,IAtBpC,EAyBYC,mBAAS,CAAC,EAAG,IAzBzB,mBAyBbD,EAzBa,KAyBHE,EAzBG,KA+BdC,EAAQlB,EAAMT,OAAO4B,KAAI,SAACC,EAAIC,GAChC,OACI,6BAAyBD,EAAGD,KAAI,SAACG,EAAIC,GACjC,OACI,oBAAiCC,QAAS,WAPtDP,EAAY,CAO+DI,EAASE,KAAS9C,UAAY4C,IAAYN,EAAS,IAAMQ,IAAUR,EAAS,GAAM,iBAAmB,KAApK,SACKO,GAAM,IADX,WAAaD,EAAb,YAAwBE,QAFhC,WAAaF,OAWfxB,EAASG,EAAMyB,WAAWN,KAAI,SAAAO,GAAC,OAAI,oBAAYC,aAAYD,EAAGF,QAASf,EAApC,SAA+CiB,GAAtCA,MAGlD,OACI,sBAAKjD,UAAU,YAAf,UACI,uBAAOA,UAAU,QAAjB,SACI,gCACKyC,MAGT,oBAAIzC,UAAU,SAAd,SACKoB,IAEL,sBAAKpB,UAAU,SAAf,qBAAiCuB,EAAMF,OAAvC,cCpCG8B,eApBS,SAAAC,GACpB,MAAO,CACHtC,OAAQsC,EAAMC,KAAKvC,OAAOC,MAC1BiC,WAAYI,EAAMC,KAAKjC,OACvBC,OAAQ+B,EAAMC,KAAKhC,WAIA,SAAAiC,GACvB,MAAO,CACHpB,sBADG,SACmBG,EAAOC,GACzB,IAAIiB,EFZqB,SAAClB,EAAOC,GAAR,MAAsB,CAAEkB,KAAMtD,EAAWmC,QAAOC,YEY5DJ,CAAsBG,EAAOC,GAC1CgB,EAASC,IAEb5B,UALG,WAMC2B,EFfoB,CAAEE,KAAMrD,QEoBzBgD,CAA6C7B,GCd7CmC,EARF,WACT,OACI,sBAAKzD,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,oBACA,cAAC,IAAD,CAASC,GAAG,QAAQD,UAAU,aAA9B,4BCIG0D,EARH,WACR,OACI,sBAAK1D,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,wBACA,cAAC,IAAD,CAASC,GAAG,QAAQD,UAAU,aAA9B,4BCeG2D,MAdf,SAAapC,GACT,OACI,qBAAKvB,UAAU,MAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,QAAQC,QAAS,cAAC,EAAD,MACnC,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAACC,EAAD,MAC7B,cAAC,IAAD,CAAOF,KAAK,OAAOC,QAAS,cAAC,EAAD,MAC5B,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,YCHlCE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCJRQ,EAAWC,YAAgB,CAC7BrB,KP4EmB,WAA4C,IAA3CD,EAA0C,uDAAlCxC,EAAgBR,GAAOmD,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKtD,EACD,GAAkE,IAA/DkD,EAAMtC,OAAOC,MAAMwC,EAAOjB,SAAS,IAAIiB,EAAOjB,SAAS,IAAW,OAAOc,EAC5E,IAAIuB,EAAQ,2BACLvB,GADK,IAERtC,OAAO,2BAAMsC,EAAMtC,QAAb,IAAqBC,MAAM,YAAKqC,EAAMtC,OAAOC,WAEnDsB,GAASkB,EAAOlB,MAMpB,OALIe,EAAMtC,OAAOK,IAAIoC,EAAOjB,SAAS,IAAIiB,EAAOjB,SAAS,MAAQD,EAC7DsC,EAAS7D,OAAOC,MAAMwC,EAAOjB,SAAS,IAAIiB,EAAOjB,SAAS,IAAMD,EAEhEsC,EAAStD,SAENsD,EAEX,KAAKxE,EACD,OAAOS,EAAgBR,GAE/B,OAAOgD,KO5FLwB,EAAQC,YAAYJ,GAC1B3C,OAAO8C,MAAQA,EACAA,QCAfE,IAASC,OACP,cAAC,IAAD,CAAeC,SAAUC,mBAAzB,SACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAE1BnB,M","file":"static/js/main.c86e09bb.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\n\r\nconst GameOver = () => {\r\n    return (\r\n        <div className='container'>\r\n            <h1 className='title'>Game Over</h1>\r\n            <NavLink to='/main' className='link-start'>Play Again</NavLink>\r\n        </div>\r\n    );\r\n}\r\nexport default GameOver;","const SET_VALUE = 'SET-VALUE';\r\nconst START_GAME = 'START-GAME';\r\n\r\nexport const setValueActionCreator = (value, indexArr) => ({ type: SET_VALUE, value, indexArr });\r\nexport const startGame = () => ({ type: START_GAME })\r\n\r\nconst data = {\r\n    chooseMatrix() {\r\n        return Math.floor(Math.random() * this.dataMatrix.length);\r\n    },\r\n    dataMatrix: [\r\n        [\r\n            [\r\n                [1, 2, 3, 5, 4, 6],\r\n                [6, 5, 4, 3, 1, 2],\r\n                [2, 6, 1, 4, 5, 3],\r\n                [4, 3, 5, 6, 2, 1],\r\n                [3, 4, 2, 1, 6, 5],\r\n                [5, 1, 6, 2, 3, 4]\r\n            ],\r\n            [\r\n                [0, 2, 3, 0, 4, 6],\r\n                [0, 5, 4, 3, 1, 2],\r\n                [2, 6, 1, 0, 0, 0],\r\n                [0, 3, 0, 0, 0, 0],\r\n                [0, 0, 2, 0, 0, 0],\r\n                [5, 0, 0, 0, 0, 4]\r\n            ]\r\n        ],\r\n        [\r\n            [\r\n                [4, 6, 3, 1, 2, 5],\r\n                [1, 2, 5, 3, 4, 6],\r\n                [5, 1, 6, 4, 3, 2],\r\n                [2, 3, 4, 5, 6, 1],\r\n                [6, 4, 1, 2, 5, 3],\r\n                [3, 5, 2, 6, 1, 4]\r\n            ],\r\n            [\r\n                [0, 0, 0, 1, 2, 0],\r\n                [1, 2, 5, 0, 4, 0],\r\n                [0, 0, 0, 4, 3, 2],\r\n                [0, 0, 4, 0, 0, 0],\r\n                [0, 4, 1, 2, 5, 3],\r\n                [3, 0, 0, 0, 0, 0]\r\n            ]\r\n        ],\r\n        [\r\n            [\r\n                [2, 1, 5, 3, 4, 6],\r\n                [6, 4, 3, 1, 2, 5],\r\n                [1, 3, 2, 5, 6, 4],\r\n                [5, 6, 4, 2, 1, 3],\r\n                [4, 5, 1, 6, 3, 2],\r\n                [3, 2, 6, 4, 5, 1]\r\n            ],\r\n            [\r\n                [2, 0, 5, 3, 4, 0],\r\n                [0, 4, 3, 0, 0, 0],\r\n                [0, 3, 0, 0, 6, 0],\r\n                [5, 6, 0, 2, 0, 0],\r\n                [4, 5, 1, 0, 0, 0],\r\n                [0, 2, 0, 0, 0, 1]\r\n            ]\r\n        ],\r\n    ],\r\n}\r\n\r\nconst getInitialState = (data) => {\r\n    const randomData = data.chooseMatrix();\r\n    return {\r\n        matrix: {\r\n            start: JSON.parse(JSON.stringify(data.dataMatrix[randomData][1])),\r\n            end: JSON.parse(JSON.stringify(data.dataMatrix[randomData][0])),\r\n        },\r\n        values: [1, 2, 3, 4, 5, 6],\r\n        errors: 0,\r\n    }\r\n}\r\n\r\nexport const reducer = (state = getInitialState(data), action) => {\r\n    switch (action.type) {\r\n        case SET_VALUE:\r\n            if(state.matrix.start[action.indexArr[0]][action.indexArr[1]] !== 0) return state\r\n            let newState = {\r\n                ...state,\r\n                matrix: { ...state.matrix, start: [...state.matrix.start] }\r\n            }\r\n            let value = +action.value;\r\n            if (state.matrix.end[action.indexArr[0]][action.indexArr[1]] === value) {\r\n                newState.matrix.start[action.indexArr[0]][action.indexArr[1]] = value;\r\n            } else {\r\n                newState.errors++;\r\n            }\r\n            return newState;\r\n\r\n        case START_GAME:\r\n            return getInitialState(data);\r\n    }\r\n    return state;\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Main = (props) => {\r\n    let navigate = useNavigate();\r\n    const isWin = () => {\r\n        for (let arr of props.matrix) {\r\n            if (arr.includes(0)) return;\r\n        }\r\n        props.startGame();\r\n        navigate('/win');\r\n    }\r\n    const isOver = () => {\r\n        if (props.errors >= 3) {\r\n            props.startGame();\r\n            navigate('/gameOver');\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        isOver();\r\n        isWin();\r\n        window.onpopstate = () => props.startGame();\r\n    }, [props.matrix, props.errors]);\r\n\r\n    const setValue = (e) => {\r\n        props.setValueActionCreator(e.target.dataset.value, indexArr);\r\n    };\r\n\r\n    const [indexArr, newIndexArr] = useState([0, 0]);\r\n\r\n    const setActiveInput = (a, b) => {\r\n        newIndexArr([a, b]);\r\n    }\r\n\r\n    const tbody = props.matrix.map((tr, trIndex) => {\r\n        return (\r\n            <tr key={`_${trIndex}`}>{tr.map((td, index) => {\r\n                return (\r\n                    <td key={`_${trIndex}_${index}`} onClick={() => setActiveInput(trIndex, index)}  className={(trIndex === indexArr[0] && index === indexArr[1]) ? 'td active-cell' : 'td'}>\r\n                        {td || ''}\r\n                    </td>\r\n                )\r\n            })}\r\n            </tr>\r\n        )\r\n    });\r\n\r\n    const values = props.valuesData.map(i => <li key={i} data-value={i} onClick={setValue}>{i}</li>);\r\n    \r\n\r\n    return (\r\n        <div className='container'>\r\n            <table className='table'>\r\n                <tbody>\r\n                    {tbody}\r\n                </tbody>\r\n            </table>\r\n            <ul className='values'>\r\n                {values}\r\n            </ul>\r\n            <div className='errors'>Errors: {props.errors} / 3</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import { connect } from \"react-redux\"\r\nimport { setValueActionCreator, startGame } from '../../store/reducer'\r\nimport Main from \"./Main\"\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        matrix: state.main.matrix.start,\r\n        valuesData: state.main.values,\r\n        errors: state.main.errors,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setValueActionCreator(value, indexArr) {\r\n            let action = setValueActionCreator(value, indexArr);\r\n            dispatch(action);\r\n        },\r\n        startGame() {\r\n            dispatch(startGame());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)\r\n// export default connect(mapStateToProps, {setValueActionCreator, startGame})(Main)","import { NavLink } from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div className='container'>\r\n            <h1 className='title'>Sudoku</h1>\r\n            <NavLink to='/main' className='link-start'>Start Game</NavLink>\r\n        </div>\r\n    );\r\n}\r\nexport default Menu;","import { NavLink } from \"react-router-dom\";\r\n\r\nconst Win = () => {\r\n    return (\r\n        <div className='container'>\r\n            <h1 className='title'>You Won!!!</h1>\r\n            <NavLink to='/main' className='link-start'>Play Again</NavLink>\r\n        </div>\r\n    );\r\n}\r\nexport default Win;","import { Route, Routes } from 'react-router-dom';\r\nimport './App.scss';\r\nimport GameOver from './components/GameOver';\r\nimport MainContainer from './components/Main/MainContainer';\r\nimport Menu from './components/Menu';\r\nimport Win from './components/Win';\r\n\r\nfunction App(props) {\r\n    return (\r\n        <div className=\"app\">\r\n            <Routes>\r\n                <Route exact path=\"/\" element={<Menu />} />\r\n                <Route exact path=\"/menu\" element={<Menu />} />\r\n                <Route path='/main' element={<MainContainer />} />\r\n                <Route path='/win' element={<Win />} />\r\n                <Route path='/gameOver' element={<GameOver />} />\r\n            </Routes>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    main: reducer,\r\n});\r\n\r\nconst store = createStore(reducers);\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n/* \r\nДЗ\r\n1. Если пользователь кликает на ячейку, в которой уже установлено какое-то значение, то\r\n  ничего происходить не должно. \r\n*/"],"sourceRoot":""}