{"version":3,"sources":["components/GameOver.jsx","components/Main.jsx","components/Menu.jsx","components/Win.jsx","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["GameOver","className","to","Main","props","tbody","state","matrix","map","tr","trIndex","td","index","values","valuesData","i","data-value","errors","Menu","Win","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","_state","getState","this","_callSubscriber","console","log","subscribe","observer","ReactDOM","basename","process","document","getElementById"],"mappings":"yOAUeA,EARE,WACb,OACI,sBAAKC,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,uBACA,cAAC,IAAD,CAASC,GAAG,QAAQD,UAAU,aAA9B,4BCwBGE,EA9BF,SAACC,GACV,IAAMC,EAAQD,EAAME,MAAMC,OAAOC,KAAI,SAACC,EAAIC,GACtC,OACI,6BAAyBD,EAAGD,KAAI,SAACG,EAAIC,GACjC,OACI,6BACKD,GAAM,IADX,WAAaD,EAAb,YAAwBE,QAFhC,WAAaF,OAUfG,EAAST,EAAME,MAAMQ,WAAWN,KAAI,SAAAO,GAAC,OAAI,oBAAYC,aAAYD,EAAxB,SAA4BA,GAAnBA,MAGxD,OACI,sBAAKd,UAAU,YAAf,UACI,uBAAOA,UAAU,QAAjB,SACI,gCACKI,MAGT,oBAAIJ,UAAU,SAAd,SACKY,IAEL,sBAAKZ,UAAU,SAAf,qBAAiCG,EAAME,MAAMW,OAA7C,cChBGC,EARF,WACT,OACI,sBAAKjB,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,oBACA,cAAC,IAAD,CAASC,GAAG,QAAQD,UAAU,aAA9B,4BCIGkB,EARH,WACR,OACI,sBAAKlB,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,wBACA,cAAC,IAAD,CAASC,GAAG,QAAQD,UAAU,aAA9B,4BCYGmB,MAXf,SAAahB,GACT,OACI,sBAAKH,UAAU,MAAf,UACI,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAM,CAAC,IAAK,SAAUC,OAAQ,kBAAM,cAAC,EAAD,OACjD,cAAC,IAAD,CAAOD,KAAK,QAAQC,OAAQ,kBAAM,cAAC,EAAD,CAAMjB,MAAOF,EAAME,WACrD,cAAC,IAAD,CAAOgB,KAAK,OAAOC,OAAQ,kBAAM,cAAC,EAAD,OACjC,cAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,cAAC,EAAD,WCDnCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCsBCQ,EA7BD,CAEVC,OAAQ,CACJ3B,OAAQ,CACJ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAEpBO,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5BG,OAAQ,GAGZkB,SAfU,WAgBN,OAAOC,KAAKF,QAGhBG,gBAnBU,WAoBNC,QAAQC,IAAI,KAGhBC,UAvBU,SAuBAC,GACNL,KAAKC,gBAAkBI,ICfzBlB,EAAS,SAAAjB,GACboC,IAASnB,OACP,cAAC,IAAD,CAAeoB,SAAUC,mBAAzB,SACE,cAAC,EAAD,CAAKtC,MAAOA,MAEduC,SAASC,eAAe,UAG5Bb,EAAMO,UAAUjB,GAChBA,EAAOU,EAAME,YAMbX,M","file":"static/js/main.908611c9.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\n\r\nconst GameOver = () => {\r\n    return (\r\n        <div className='container'>\r\n            <h1 className='title'>Game Over</h1>\r\n            <NavLink to='/main' className='link-start'>Play Again</NavLink>\r\n        </div>\r\n    );\r\n}\r\nexport default GameOver;","const Main = (props) => {\r\n    const tbody = props.state.matrix.map((tr, trIndex) => {\r\n        return (\r\n            <tr key={`_${trIndex}`}>{tr.map((td, index) => {\r\n                return (\r\n                    <td key={`_${trIndex}_${index}`}>\r\n                        {td || ''}\r\n                    </td>\r\n                )\r\n            })}\r\n            </tr>\r\n        )\r\n    });\r\n    const values = props.state.valuesData.map(i => <li key={i} data-value={i}>{i}</li>);\r\n    \r\n\r\n    return (\r\n        <div className='container'>\r\n            <table className='table'>\r\n                <tbody>\r\n                    {tbody}\r\n                </tbody>\r\n            </table>\r\n            <ul className='values'>\r\n                {values}\r\n            </ul>\r\n            <div className='errors'>Errors: {props.state.errors} / 3</div>\r\n        </div>\r\n    );\r\n}\r\nexport default Main;","import { NavLink } from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div className='container'>\r\n            <h1 className='title'>Sudoku</h1>\r\n            <NavLink to='/main' className='link-start'>Start Game</NavLink>\r\n        </div>\r\n    );\r\n}\r\nexport default Menu;","import { NavLink } from \"react-router-dom\";\r\n\r\nconst Win = () => {\r\n    return (\r\n        <div className='container'>\r\n            <h1 className='title'>You Win!!!</h1>\r\n            <NavLink to='/main' className='link-start'>Play Again</NavLink>\r\n        </div>\r\n    );\r\n}\r\nexport default Win;","import { Route } from 'react-router';\nimport './App.scss';\nimport GameOver from './components/GameOver';\nimport Main from './components/Main';\nimport Menu from './components/Menu';\nimport Win from './components/Win';\n\nfunction App(props) {\n    return (\n        <div className=\"app\">\n            <Route exact path={[\"/\", \"/menu\"]} render={() => <Menu />} />\n            <Route path='/main' render={() => <Main state={props.state} />} />\n            <Route path='/win' render={() => <Win />} />\n            <Route path='/gameOver' render={() => <GameOver />} />\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const store = {\r\n\r\n    _state: {\r\n        matrix: [\r\n            [1, 0, 3, 5, 0, 6],\r\n            [6, 5, 4, 3, 1, 0],\r\n            [2, 0, 1, 0, 5, 3],\r\n            [4, 3, 5, 6, 2, 1],\r\n            [3, 4, 0, 1, 0, 5],\r\n            [5, 1, 6, 2, 3, 0]\r\n        ],\r\n        valuesData: [1, 2, 3, 4, 5, 6],\r\n        errors: 0,\r\n    },\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n\r\n    _callSubscriber() { // пока функция-пустышка\r\n        console.log('');\r\n    },\r\n\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer; // пустышку переприсваиваем в другую функцию \r\n    },\r\n\r\n}\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './store/store';\n\n\nconst render = state => {\n  ReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App state={state} />\n    </BrowserRouter>,\n    document.getElementById('root')\n  );\n}\nstore.subscribe(render);\nrender(store.getState())\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}